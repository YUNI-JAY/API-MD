(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{305:function(v,_,a){"use strict";a.r(_);var t=a(14),i=Object(t.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"api-网关-项目介绍"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#api-网关-项目介绍"}},[v._v("#")]),v._v(" API 网关-项目介绍")]),v._v(" "),_("h2",{attrs:{id:"前言"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[v._v("#")]),v._v(" 前言")]),v._v(" "),_("blockquote",[_("p",[v._v("概述")])]),v._v(" "),_("p",[v._v("API 网关（API Gateway）是 API 托管服务，提供 API 的完整生命周期管理，包括创建、维护、发布、运行、下线等。您可使用 API Gateway 封装自身业务，将您的数据、业务逻辑或功能安全可靠的开放出来，用以实现自身系统集成、以及与开发人员的业务连接。")]),v._v(" "),_("h2",{attrs:{id:"api-网关是什么"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#api-网关是什么"}},[v._v("#")]),v._v(" API 网关是什么？")]),v._v(" "),_("p",[v._v("API 网关是用于实现完整 API 托管的服务，用于协助开发者轻松完成 API 的创建、维护、发布、监控等整个生命周期的管理。通过 API 网关，您可以封装后端各种服务，以 API 的形式，提供给各方使用。同时，API 网关协助您完成 API 测试和 SDK 生成等。")]),v._v(" "),_("h2",{attrs:{id:"api-网关产品功能"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#api-网关产品功能"}},[v._v("#")]),v._v(" API 网关产品功能？")]),v._v(" "),_("ul",[_("li",[v._v("支持针对不同渠道/系统配置，配置相关服务及 API。")]),v._v(" "),_("li",[v._v("支持根据服务一键生成 API。")]),v._v(" "),_("li",[v._v("支持对系统地址/服务地址进行维护。")]),v._v(" "),_("li",[v._v("支持自定义需求开发且可关联部分 API 进行测试。")]),v._v(" "),_("li",[v._v("支持对历史版本的版本对比及 API 的测试功能。")]),v._v(" "),_("li",[v._v("支持对发布历史的统一查看。")]),v._v(" "),_("li",[v._v("支持对公共报文的配置及展示报文内容。")]),v._v(" "),_("li",[v._v("支持版本管理，发布后自动生成版本，可快速切换到任一历史版本。")])]),v._v(" "),_("h2",{attrs:{id:"api-网关的应用场景有哪些"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#api-网关的应用场景有哪些"}},[v._v("#")]),v._v(" API 网关的应用场景有哪些？")]),v._v(" "),_("h3",{attrs:{id:"微服务开发"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#微服务开发"}},[v._v("#")]),v._v(" 微服务开发")]),v._v(" "),_("p",[v._v("在用户系统为微服务架构开发的情况下，微服务架构带来如下状况：")]),v._v(" "),_("ul",[_("li",[v._v("大量的微服务模块。")]),v._v(" "),_("li",[v._v("每个模块均提供自身的 API 服务接口。")]),v._v(" "),_("li",[v._v("每个模块均提供自身服务的地址或 负载均衡 CLB。")]),v._v(" "),_("li",[v._v("某些 API 调用存在前后关联。")]),v._v(" "),_("li",[v._v("某些情况需对多个 API 进行调用来获取最终数据。")]),v._v(" "),_("li",[v._v("API 的调用规范、命名方式、参数设计不一定统一。")]),v._v(" "),_("li",[v._v("每个模块的 API，均需要进行认证和鉴权。")]),v._v(" "),_("li",[v._v("某些模块的 API 请求可能由于业务突发性增大。")])]),v._v(" "),_("p",[v._v("在这种情况下，对 API 的管理和使用，会随着微服务模块的增长而越来越麻烦。通过 API 网关，能很好的解决这些问题：")]),v._v(" "),_("ul",[_("li",[v._v("完成 API 的统一管理，对于要使用的 API 的用户，仅需在一个地方完成 API 使用查询。")]),v._v(" "),_("li",[v._v("自动生成文档和 SDK，并可以自动完成测试调用，方便使用者或开发者更快速的开始使用 API。")]),v._v(" "),_("li",[v._v("进行请求流控，不会导致后端模块由于突发性压力而失败。")]),v._v(" "),_("li",[v._v("统一 API 的规范、命名、参数调用方式。")]),v._v(" "),_("li",[v._v("进行统一的 API 认证和鉴权。")])])])}),[],!1,null,null,null);_.default=i.exports}}]);